/*!
 * jquery.spinner v0.2.1 (https://vsn4ik.github.io/jquery.spinner/)
 * Copyright 2013-2016 xixilive
 * Licensed under the MIT license
 */
"use strict";!function(a){"function"==typeof define&&define.amd?define(["jquery"],a):"object"==typeof exports?module.exports=a(require("jquery")):a(jQuery)}(function(a){var b,c,d=function(b,c){return this.$el=b,this.options=a.extend({},d.rules.defaults,d.rules[c.rule]||{},c),this.min=Number(this.options.min)||0,this.max=Number(this.options.max)||0,this.$el.on({"focus.spinner":a.proxy(function(b){b.preventDefault(),a(document).trigger("mouseup.spinner"),this.oldValue=this.value()},this),"change.spinner":a.proxy(function(a){a.preventDefault(),this.value(this.$el.val())},this),"keydown.spinner":a.proxy(function(a){var b={38:"up",40:"down"}[a.which];b&&(a.preventDefault(),this.spin(b))},this)}),this.oldValue=this.value(),this.value(this.$el.val()),this};d.rules={defaults:{min:null,max:null,step:1,precision:0},currency:{min:0,max:null,step:.01,precision:2},quantity:{min:1,max:999,step:1,precision:0},percent:{min:1,max:100,step:1,precision:0},month:{min:1,max:12,step:1,precision:0},day:{min:1,max:31,step:1,precision:0},hour:{min:0,max:23,step:1,precision:0},minute:{min:1,max:59,step:1,precision:0},second:{min:1,max:59,step:1,precision:0}},d.prototype={spin:function(b){if(!this.$el.prop("disabled")){this.oldValue=this.value();var c=a.isFunction(this.options.step)?this.options.step.call(this,b):this.options.step,d="up"===b?1:-1;this.value(this.oldValue+Number(c)*d)}},value:function(d){if(null===d||void 0===d)return this.numeric(this.$el.val());d=this.numeric(d);var e=this.validate(d);0!==e&&(d=e===-1?this.min:this.max),this.$el.val(d.toFixed(this.options.precision)),this.oldValue!==this.value()&&(this.$el.trigger("changing.spinner",[this.value(),this.oldValue]),clearTimeout(b),b=setTimeout(a.proxy(function(){this.$el.trigger("changed.spinner",[this.value(),this.oldValue])},this),c.delay))},numeric:function(a){return a=this.options.precision>0?parseFloat(a,10):parseInt(a,10),isFinite(a)?a:a||this.options.min||0},validate:function(a){return null!==this.options.min&&a<this.min?-1:null!==this.options.max&&a>this.max?1:0}},c=function(b,c){this.$el=a(b),this.$spinning=this.$el.find('[data-spin="spinner"]'),0===this.$spinning.length&&(this.$spinning=this.$el.find(':input[type="text"]')),c=a.extend({},c,this.$spinning.data()),this.spinning=new d(this.$spinning,c),this.$el.on("click.spinner",'[data-spin="up"], [data-spin="down"]',a.proxy(this,"spin")).on("mousedown.spinner",'[data-spin="up"], [data-spin="down"]',a.proxy(this,"spin")),a(document).on("mouseup.spinner",a.proxy(function(){clearTimeout(this.spinTimeout),clearInterval(this.spinInterval)},this)),c.delay&&this.delay(c.delay),c.changed&&this.changed(c.changed),c.changing&&this.changing(c.changing)},c.delay=500,c.prototype={constructor:c,spin:function(b){var c=a(b.currentTarget).data("spin");switch(b.type){case"click":b.preventDefault(),this.spinning.spin(c);break;case"mousedown":1===b.which&&(this.spinTimeout=setTimeout(a.proxy(this,"beginSpin",c),300))}},delay:function(a){var b=Number(a);b>=0&&(this.constructor.delay=b+100)},value:function(){return this.spinning.value()},changed:function(a){this.bindHandler("changed.spinner",a)},changing:function(a){this.bindHandler("changing.spinner",a)},bindHandler:function(b,c){a.isFunction(c)?this.$spinning.on(b,c):this.$spinning.off(b)},beginSpin:function(b){this.spinInterval=setInterval(a.proxy(this.spinning,"spin",b),100)}};var e=a.fn.spinner;return a.fn.spinner=function(b,d){return this.each(function(){var e=a.data(this,"spinner");e||(e=new c(this,b),a.data(this,"spinner",e)),"delay"===b||"changed"===b||"changing"===b?e[b](d):"step"===b&&d?e.spinning.step=d:"spin"===b&&d&&e.spinning.spin(d)})},a.fn.spinner.Constructor=c,a.fn.spinner.noConflict=function(){return a.fn.spinner=e,this},a(function(){a('[data-trigger="spinner"]').spinner()}),a.fn.spinner});;
/*!
 * # Semantic UI 2.2.4 - Transition
 * http://github.com/semantic-org/semantic-ui/
 *
 *
 * Released under the MIT license
 * http://opensource.org/licenses/MIT
 *
 */
!function(n,e,i,t){"use strict";e="undefined"!=typeof e&&e.Math==Math?e:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")(),n.fn.transition=function(){var a,o=n(this),r=o.selector||"",s=(new Date).getTime(),l=[],u=arguments,c=u[0],d=[].slice.call(arguments,1),m="string"==typeof c;e.requestAnimationFrame||e.mozRequestAnimationFrame||e.webkitRequestAnimationFrame||e.msRequestAnimationFrame||function(n){setTimeout(n,0)};return o.each(function(e){var f,p,g,v,b,y,h,w,C,A=n(this),S=this;C={initialize:function(){f=C.get.settings.apply(S,u),v=f.className,g=f.error,b=f.metadata,w="."+f.namespace,h="module-"+f.namespace,p=A.data(h)||C,y=C.get.animationEndEvent(),m&&(m=C.invoke(c)),m===!1&&(C.verbose("Converted arguments into settings object",f),f.interval?C.delay(f.animate):C.animate(),C.instantiate())},instantiate:function(){C.verbose("Storing instance of module",C),p=C,A.data(h,p)},destroy:function(){C.verbose("Destroying previous module for",S),A.removeData(h)},refresh:function(){C.verbose("Refreshing display type on next animation"),delete C.displayType},forceRepaint:function(){C.verbose("Forcing element repaint");var n=A.parent(),e=A.next();0===e.length?A.detach().appendTo(n):A.detach().insertBefore(e)},repaint:function(){C.verbose("Repainting element");S.offsetWidth},delay:function(n){var i,a,r=C.get.animationDirection();r||(r=C.can.transition()?C.get.direction():"static"),n=n!==t?n:f.interval,i="auto"==f.reverse&&r==v.outward,a=i||1==f.reverse?(o.length-e)*f.interval:e*f.interval,C.debug("Delaying animation by",a),setTimeout(C.animate,a)},animate:function(n){if(f=n||f,!C.is.supported())return C.error(g.support),!1;if(C.debug("Preparing animation",f.animation),C.is.animating()){if(f.queue)return!f.allowRepeats&&C.has.direction()&&C.is.occurring()&&C.queuing!==!0?C.debug("Animation is currently occurring, preventing queueing same animation",f.animation):C.queue(f.animation),!1;if(!f.allowRepeats&&C.is.occurring())return C.debug("Animation is already occurring, will not execute repeated animation",f.animation),!1;C.debug("New animation started, completing previous early",f.animation),p.complete()}C.can.animate()?C.set.animating(f.animation):C.error(g.noAnimation,f.animation,S)},reset:function(){C.debug("Resetting animation to beginning conditions"),C.remove.animationCallbacks(),C.restore.conditions(),C.remove.animating()},queue:function(n){C.debug("Queueing animation of",n),C.queuing=!0,A.one(y+".queue"+w,function(){C.queuing=!1,C.repaint(),C.animate.apply(this,f)})},complete:function(n){C.debug("Animation complete",f.animation),C.remove.completeCallback(),C.remove.failSafe(),C.is.looping()||(C.is.outward()?(C.verbose("Animation is outward, hiding element"),C.restore.conditions(),C.hide()):C.is.inward()?(C.verbose("Animation is outward, showing element"),C.restore.conditions(),C.show()):(C.verbose("Static animation completed"),C.restore.conditions(),f.onComplete.call(S)))},force:{visible:function(){var n=A.attr("style"),e=C.get.userStyle(),i=C.get.displayType(),a=e+"display: "+i+" !important;",o=A.css("display"),r=n===t||""===n;o!==i?(C.verbose("Overriding default display to show element",i),A.attr("style",a)):r&&A.removeAttr("style")},hidden:function(){var n=A.attr("style"),e=A.css("display"),i=n===t||""===n;"none"===e||C.is.hidden()?i&&A.removeAttr("style"):(C.verbose("Overriding default display to hide element"),A.css("display","none"))}},has:{direction:function(e){var i=!1;return e=e||f.animation,"string"==typeof e&&(e=e.split(" "),n.each(e,function(n,e){e!==v.inward&&e!==v.outward||(i=!0)})),i},inlineDisplay:function(){var e=A.attr("style")||"";return n.isArray(e.match(/display.*?;/,""))}},set:{animating:function(n){var e;C.remove.completeCallback(),n=n||f.animation,e=C.get.animationClass(n),C.save.animation(e),C.force.visible(),C.remove.hidden(),C.remove.direction(),C.start.animation(e)},duration:function(n,e){e=e||f.duration,e="number"==typeof e?e+"ms":e,(e||0===e)&&(C.verbose("Setting animation duration",e),A.css({"animation-duration":e}))},direction:function(n){n=n||C.get.direction(),n==v.inward?C.set.inward():C.set.outward()},looping:function(){C.debug("Transition set to loop"),A.addClass(v.looping)},hidden:function(){A.addClass(v.transition).addClass(v.hidden)},inward:function(){C.debug("Setting direction to inward"),A.removeClass(v.outward).addClass(v.inward)},outward:function(){C.debug("Setting direction to outward"),A.removeClass(v.inward).addClass(v.outward)},visible:function(){A.addClass(v.transition).addClass(v.visible)}},start:{animation:function(n){n=n||C.get.animationClass(),C.debug("Starting tween",n),A.addClass(n).one(y+".complete"+w,C.complete),f.useFailSafe&&C.add.failSafe(),C.set.duration(f.duration),f.onStart.call(S)}},save:{animation:function(n){C.cache||(C.cache={}),C.cache.animation=n},displayType:function(n){"none"!==n&&A.data(b.displayType,n)},transitionExists:function(e,i){n.fn.transition.exists[e]=i,C.verbose("Saving existence of transition",e,i)}},restore:{conditions:function(){var n=C.get.currentAnimation();n&&(A.removeClass(n),C.verbose("Removing animation class",C.cache)),C.remove.duration()}},add:{failSafe:function(){var n=C.get.duration();C.timer=setTimeout(function(){A.triggerHandler(y)},n+f.failSafeDelay),C.verbose("Adding fail safe timer",C.timer)}},remove:{animating:function(){A.removeClass(v.animating)},animationCallbacks:function(){C.remove.queueCallback(),C.remove.completeCallback()},queueCallback:function(){A.off(".queue"+w)},completeCallback:function(){A.off(".complete"+w)},display:function(){A.css("display","")},direction:function(){A.removeClass(v.inward).removeClass(v.outward)},duration:function(){A.css("animation-duration","")},failSafe:function(){C.verbose("Removing fail safe timer",C.timer),C.timer&&clearTimeout(C.timer)},hidden:function(){A.removeClass(v.hidden)},visible:function(){A.removeClass(v.visible)},looping:function(){C.debug("Transitions are no longer looping"),C.is.looping()&&(C.reset(),A.removeClass(v.looping))},transition:function(){A.removeClass(v.visible).removeClass(v.hidden)}},get:{settings:function(e,i,t){return"object"==typeof e?n.extend(!0,{},n.fn.transition.settings,e):"function"==typeof t?n.extend({},n.fn.transition.settings,{animation:e,onComplete:t,duration:i}):"string"==typeof i||"number"==typeof i?n.extend({},n.fn.transition.settings,{animation:e,duration:i}):"object"==typeof i?n.extend({},n.fn.transition.settings,i,{animation:e}):"function"==typeof i?n.extend({},n.fn.transition.settings,{animation:e,onComplete:i}):n.extend({},n.fn.transition.settings,{animation:e})},animationClass:function(n){var e=n||f.animation,i=C.can.transition()&&!C.has.direction()?C.get.direction()+" ":"";return v.animating+" "+v.transition+" "+i+e},currentAnimation:function(){return!(!C.cache||C.cache.animation===t)&&C.cache.animation},currentDirection:function(){return C.is.inward()?v.inward:v.outward},direction:function(){return C.is.hidden()||!C.is.visible()?v.inward:v.outward},animationDirection:function(e){var i;return e=e||f.animation,"string"==typeof e&&(e=e.split(" "),n.each(e,function(n,e){e===v.inward?i=v.inward:e===v.outward&&(i=v.outward)})),!!i&&i},duration:function(n){return n=n||f.duration,n===!1&&(n=A.css("animation-duration")||0),"string"==typeof n?n.indexOf("ms")>-1?parseFloat(n):1e3*parseFloat(n):n},displayType:function(){return f.displayType?f.displayType:(A.data(b.displayType)===t&&C.can.transition(!0),A.data(b.displayType))},userStyle:function(n){return n=n||A.attr("style")||"",n.replace(/display.*?;/,"")},transitionExists:function(e){return n.fn.transition.exists[e]},animationStartEvent:function(){var n,e=i.createElement("div"),a={animation:"animationstart",OAnimation:"oAnimationStart",MozAnimation:"mozAnimationStart",WebkitAnimation:"webkitAnimationStart"};for(n in a)if(e.style[n]!==t)return a[n];return!1},animationEndEvent:function(){var n,e=i.createElement("div"),a={animation:"animationend",OAnimation:"oAnimationEnd",MozAnimation:"mozAnimationEnd",WebkitAnimation:"webkitAnimationEnd"};for(n in a)if(e.style[n]!==t)return a[n];return!1}},can:{transition:function(e){var i,a,o,r,s,l,u,c=f.animation,d=C.get.transitionExists(c);if(d===t||e){if(C.verbose("Determining whether animation exists"),i=A.attr("class"),a=A.prop("tagName"),o=n("<"+a+" />").addClass(i).insertAfter(A),r=o.addClass(c).removeClass(v.inward).removeClass(v.outward).addClass(v.animating).addClass(v.transition).css("animationName"),s=o.addClass(v.inward).css("animationName"),u=o.attr("class",i).removeAttr("style").removeClass(v.hidden).removeClass(v.visible).show().css("display"),C.verbose("Determining final display state",u),C.save.displayType(u),o.remove(),r!=s)C.debug("Direction exists for animation",c),l=!0;else{if("none"==r||!r)return void C.debug("No animation defined in css",c);C.debug("Static animation found",c,u),l=!1}C.save.transitionExists(c,l)}return d!==t?d:l},animate:function(){return C.can.transition()!==t}},is:{animating:function(){return A.hasClass(v.animating)},inward:function(){return A.hasClass(v.inward)},outward:function(){return A.hasClass(v.outward)},looping:function(){return A.hasClass(v.looping)},occurring:function(n){return n=n||f.animation,n="."+n.replace(" ","."),A.filter(n).length>0},visible:function(){return A.is(":visible")},hidden:function(){return"hidden"===A.css("visibility")},supported:function(){return y!==!1}},hide:function(){C.verbose("Hiding element"),C.is.animating()&&C.reset(),S.blur(),C.remove.display(),C.remove.visible(),C.set.hidden(),C.force.hidden(),f.onHide.call(S),f.onComplete.call(S)},show:function(n){C.verbose("Showing element",n),C.remove.hidden(),C.set.visible(),C.force.visible(),f.onShow.call(S),f.onComplete.call(S)},toggle:function(){C.is.visible()?C.hide():C.show()},stop:function(){C.debug("Stopping current animation"),A.triggerHandler(y)},stopAll:function(){C.debug("Stopping all animation"),C.remove.queueCallback(),A.triggerHandler(y)},clear:{queue:function(){C.debug("Clearing animation queue"),C.remove.queueCallback()}},enable:function(){C.verbose("Starting animation"),A.removeClass(v.disabled)},disable:function(){C.debug("Stopping animation"),A.addClass(v.disabled)},setting:function(e,i){if(C.debug("Changing setting",e,i),n.isPlainObject(e))n.extend(!0,f,e);else{if(i===t)return f[e];n.isPlainObject(f[e])?n.extend(!0,f[e],i):f[e]=i}},internal:function(e,i){if(n.isPlainObject(e))n.extend(!0,C,e);else{if(i===t)return C[e];C[e]=i}},debug:function(){!f.silent&&f.debug&&(f.performance?C.performance.log(arguments):(C.debug=Function.prototype.bind.call(console.info,console,f.name+":"),C.debug.apply(console,arguments)))},verbose:function(){!f.silent&&f.verbose&&f.debug&&(f.performance?C.performance.log(arguments):(C.verbose=Function.prototype.bind.call(console.info,console,f.name+":"),C.verbose.apply(console,arguments)))},error:function(){f.silent||(C.error=Function.prototype.bind.call(console.error,console,f.name+":"),C.error.apply(console,arguments))},performance:{log:function(n){var e,i,t;f.performance&&(e=(new Date).getTime(),t=s||e,i=e-t,s=e,l.push({Name:n[0],Arguments:[].slice.call(n,1)||"",Element:S,"Execution Time":i})),clearTimeout(C.performance.timer),C.performance.timer=setTimeout(C.performance.display,500)},display:function(){var e=f.name+":",i=0;s=!1,clearTimeout(C.performance.timer),n.each(l,function(n,e){i+=e["Execution Time"]}),e+=" "+i+"ms",r&&(e+=" '"+r+"'"),o.length>1&&(e+=" ("+o.length+")"),(console.group!==t||console.table!==t)&&l.length>0&&(console.groupCollapsed(e),console.table?console.table(l):n.each(l,function(n,e){console.log(e.Name+": "+e["Execution Time"]+"ms")}),console.groupEnd()),l=[]}},invoke:function(e,i,o){var r,s,l,u=p;return i=i||d,o=S||o,"string"==typeof e&&u!==t&&(e=e.split(/[\. ]/),r=e.length-1,n.each(e,function(i,a){var o=i!=r?a+e[i+1].charAt(0).toUpperCase()+e[i+1].slice(1):e;if(n.isPlainObject(u[o])&&i!=r)u=u[o];else{if(u[o]!==t)return s=u[o],!1;if(!n.isPlainObject(u[a])||i==r)return u[a]!==t&&(s=u[a],!1);u=u[a]}})),n.isFunction(s)?l=s.apply(o,i):s!==t&&(l=s),n.isArray(a)?a.push(l):a!==t?a=[a,l]:l!==t&&(a=l),s!==t&&s}},C.initialize()}),a!==t?a:this},n.fn.transition.exists={},n.fn.transition.settings={name:"Transition",silent:!1,debug:!1,verbose:!1,performance:!0,namespace:"transition",interval:0,reverse:"auto",onStart:function(){},onComplete:function(){},onShow:function(){},onHide:function(){},useFailSafe:!0,failSafeDelay:100,allowRepeats:!1,displayType:!1,animation:"fade",duration:!1,queue:!0,metadata:{displayType:"display"},className:{animating:"animating",disabled:"disabled",hidden:"hidden",inward:"in",loading:"loading",looping:"looping",outward:"out",transition:"transition",visible:"visible"},error:{noAnimation:"Element is no longer attached to DOM. Unable to animate.  Use silent setting to surpress this warning in production.",repeated:"That animation is already occurring, cancelling repeated animation",method:"The method you called is not defined",support:"This browser does not support CSS animations"}}}(jQuery,window,document);;
/*!
Tipso
*/

!function(t){"function"==typeof define&&define.amd?define(["jquery"],t):"object"==typeof exports?module.exports=t(require("jquery")):t(jQuery)}(function(t){function o(o,e){this.element=o,this.$element=t(this.element),this.doc=t(document),this.win=t(window),this.settings=t.extend({},n,e),"object"==typeof this.$element.data("tipso")&&t.extend(this.settings,this.$element.data("tipso"));for(var r=Object.keys(this.$element.data()),s={},d=0;d<r.length;d++){var l=r[d].replace(i,"");if(""!==l){l=l.charAt(0).toLowerCase()+l.slice(1),s[l]=this.$element.data(r[d]);for(var p in this.settings)p.toLowerCase()==l&&(this.settings[p]=s[l])}}this._defaults=n,this._name=i,this._title=this.$element.attr("title"),this.mode="hide",this.ieFade=!a,this.settings.preferedPosition=this.settings.position,this.init()}function e(o){var e=o.clone();e.css("visibility","hidden"),t("body").append(e);var r=e.outerHeight(),s=e.outerWidth();return e.remove(),{width:s,height:r}}function r(t){t.removeClass("top_right_corner bottom_right_corner top_left_corner bottom_left_corner"),t.find(".tipso_title").removeClass("top_right_corner bottom_right_corner top_left_corner bottom_left_corner")}function s(o){var i,n,a,d=o.tooltip(),l=o.$element,p=o,f=t(window),g=10,c=p.settings.background,h=p.titleContent();switch(void 0!==h&&""!==h&&(c=p.settings.titleBackground),l.parent().outerWidth()>f.outerWidth()&&(f=l.parent()),p.settings.position){case"top-right":n=l.offset().left+l.outerWidth(),i=l.offset().top-e(d).height-g,d.find(".tipso_arrow").css({marginLeft:-p.settings.arrowWidth,marginTop:""}),i<f.scrollTop()?(i=l.offset().top+l.outerHeight()+g,d.find(".tipso_arrow").css({"border-bottom-color":c,"border-top-color":"transparent","border-left-color":"transparent","border-right-color":"transparent"}),r(d),d.addClass("bottom_right_corner"),d.find(".tipso_title").addClass("bottom_right_corner"),d.find(".tipso_arrow").css({"border-left-color":c}),d.removeClass("top-right top bottom left right"),d.addClass("bottom")):(d.find(".tipso_arrow").css({"border-top-color":p.settings.background,"border-bottom-color":"transparent ","border-left-color":"transparent","border-right-color":"transparent"}),r(d),d.addClass("top_right_corner"),d.find(".tipso_arrow").css({"border-left-color":p.settings.background}),d.removeClass("top bottom left right"),d.addClass("top"));break;case"top-left":n=l.offset().left-e(d).width,i=l.offset().top-e(d).height-g,d.find(".tipso_arrow").css({marginLeft:-p.settings.arrowWidth,marginTop:""}),i<f.scrollTop()?(i=l.offset().top+l.outerHeight()+g,d.find(".tipso_arrow").css({"border-bottom-color":c,"border-top-color":"transparent","border-left-color":"transparent","border-right-color":"transparent"}),r(d),d.addClass("bottom_left_corner"),d.find(".tipso_title").addClass("bottom_left_corner"),d.find(".tipso_arrow").css({"border-right-color":c}),d.removeClass("top-right top bottom left right"),d.addClass("bottom")):(d.find(".tipso_arrow").css({"border-top-color":p.settings.background,"border-bottom-color":"transparent ","border-left-color":"transparent","border-right-color":"transparent"}),r(d),d.addClass("top_left_corner"),d.find(".tipso_arrow").css({"border-right-color":p.settings.background}),d.removeClass("top bottom left right"),d.addClass("top"));break;case"bottom-right":n=l.offset().left+l.outerWidth(),i=l.offset().top+l.outerHeight()+g,d.find(".tipso_arrow").css({marginLeft:-p.settings.arrowWidth,marginTop:""}),i+e(d).height>f.scrollTop()+f.outerHeight()?(i=l.offset().top-e(d).height-g,d.find(".tipso_arrow").css({"border-bottom-color":"transparent","border-top-color":p.settings.background,"border-left-color":"transparent","border-right-color":"transparent"}),r(d),d.addClass("top_right_corner"),d.find(".tipso_title").addClass("top_left_corner"),d.find(".tipso_arrow").css({"border-left-color":p.settings.background}),d.removeClass("top-right top bottom left right"),d.addClass("top")):(d.find(".tipso_arrow").css({"border-top-color":"transparent","border-bottom-color":c,"border-left-color":"transparent","border-right-color":"transparent"}),r(d),d.addClass("bottom_right_corner"),d.find(".tipso_title").addClass("bottom_right_corner"),d.find(".tipso_arrow").css({"border-left-color":c}),d.removeClass("top bottom left right"),d.addClass("bottom"));break;case"bottom-left":n=l.offset().left-e(d).width,i=l.offset().top+l.outerHeight()+g,d.find(".tipso_arrow").css({marginLeft:-p.settings.arrowWidth,marginTop:""}),i+e(d).height>f.scrollTop()+f.outerHeight()?(i=l.offset().top-e(d).height-g,d.find(".tipso_arrow").css({"border-bottom-color":"transparent","border-top-color":p.settings.background,"border-left-color":"transparent","border-right-color":"transparent"}),r(d),d.addClass("top_left_corner"),d.find(".tipso_title").addClass("top_left_corner"),d.find(".tipso_arrow").css({"border-right-color":p.settings.background}),d.removeClass("top-right top bottom left right"),d.addClass("top")):(d.find(".tipso_arrow").css({"border-top-color":"transparent","border-bottom-color":c,"border-left-color":"transparent","border-right-color":"transparent"}),r(d),d.addClass("bottom_left_corner"),d.find(".tipso_title").addClass("bottom_left_corner"),d.find(".tipso_arrow").css({"border-right-color":c}),d.removeClass("top bottom left right"),d.addClass("bottom"));break;case"top":n=l.offset().left+l.outerWidth()/2-e(d).width/2,i=l.offset().top-e(d).height-g,d.find(".tipso_arrow").css({marginLeft:-p.settings.arrowWidth,marginTop:""}),i<f.scrollTop()?(i=l.offset().top+l.outerHeight()+g,d.find(".tipso_arrow").css({"border-bottom-color":c,"border-top-color":"transparent","border-left-color":"transparent","border-right-color":"transparent"}),d.removeClass("top bottom left right"),d.addClass("bottom")):(d.find(".tipso_arrow").css({"border-top-color":p.settings.background,"border-bottom-color":"transparent","border-left-color":"transparent","border-right-color":"transparent"}),d.removeClass("top bottom left right"),d.addClass("top"));break;case"bottom":n=l.offset().left+l.outerWidth()/2-e(d).width/2,i=l.offset().top+l.outerHeight()+g,d.find(".tipso_arrow").css({marginLeft:-p.settings.arrowWidth,marginTop:""}),i+e(d).height>f.scrollTop()+f.outerHeight()?(i=l.offset().top-e(d).height-g,d.find(".tipso_arrow").css({"border-top-color":p.settings.background,"border-bottom-color":"transparent","border-left-color":"transparent","border-right-color":"transparent"}),d.removeClass("top bottom left right"),d.addClass("top")):(d.find(".tipso_arrow").css({"border-bottom-color":c,"border-top-color":"transparent","border-left-color":"transparent","border-right-color":"transparent"}),d.removeClass("top bottom left right"),d.addClass(p.settings.position));break;case"left":n=l.offset().left-e(d).width-g,i=l.offset().top+l.outerHeight()/2-e(d).height/2,d.find(".tipso_arrow").css({marginTop:-p.settings.arrowWidth,marginLeft:""}),n<f.scrollLeft()?(n=l.offset().left+l.outerWidth()+g,d.find(".tipso_arrow").css({"border-right-color":p.settings.background,"border-left-color":"transparent","border-top-color":"transparent","border-bottom-color":"transparent"}),d.removeClass("top bottom left right"),d.addClass("right")):(d.find(".tipso_arrow").css({"border-left-color":p.settings.background,"border-right-color":"transparent","border-top-color":"transparent","border-bottom-color":"transparent"}),d.removeClass("top bottom left right"),d.addClass(p.settings.position));break;case"right":n=l.offset().left+l.outerWidth()+g,i=l.offset().top+l.outerHeight()/2-e(d).height/2,d.find(".tipso_arrow").css({marginTop:-p.settings.arrowWidth,marginLeft:""}),n+g+p.settings.width>f.scrollLeft()+f.outerWidth()?(n=l.offset().left-e(d).width-g,d.find(".tipso_arrow").css({"border-left-color":p.settings.background,"border-right-color":"transparent","border-top-color":"transparent","border-bottom-color":"transparent"}),d.removeClass("top bottom left right"),d.addClass("left")):(d.find(".tipso_arrow").css({"border-right-color":p.settings.background,"border-left-color":"transparent","border-top-color":"transparent","border-bottom-color":"transparent"}),d.removeClass("top bottom left right"),d.addClass(p.settings.position))}if("top-right"===p.settings.position&&d.find(".tipso_arrow").css({"margin-left":-p.settings.width/2}),"top-left"===p.settings.position){var m=d.find(".tipso_arrow").eq(0);m.css({"margin-left":p.settings.width/2-2*p.settings.arrowWidth})}if("bottom-right"===p.settings.position){var m=d.find(".tipso_arrow").eq(0);m.css({"margin-left":-p.settings.width/2,"margin-top":""})}if("bottom-left"===p.settings.position){var m=d.find(".tipso_arrow").eq(0);m.css({"margin-left":p.settings.width/2-2*p.settings.arrowWidth,"margin-top":""})}n<f.scrollLeft()&&("bottom"===p.settings.position||"top"===p.settings.position)&&(d.find(".tipso_arrow").css({marginLeft:n-p.settings.arrowWidth}),n=0),n+p.settings.width>f.outerWidth()&&("bottom"===p.settings.position||"top"===p.settings.position)&&(a=f.outerWidth()-(n+p.settings.width),d.find(".tipso_arrow").css({marginLeft:-a-p.settings.arrowWidth,marginTop:""}),n+=a),n<f.scrollLeft()&&("left"===p.settings.position||"right"===p.settings.position||"top-right"===p.settings.position||"top-left"===p.settings.position||"bottom-right"===p.settings.position||"bottom-left"===p.settings.position)&&(n=l.offset().left+l.outerWidth()/2-e(d).width/2,d.find(".tipso_arrow").css({marginLeft:-p.settings.arrowWidth,marginTop:""}),i=l.offset().top-e(d).height-g,i<f.scrollTop()?(i=l.offset().top+l.outerHeight()+g,d.find(".tipso_arrow").css({"border-bottom-color":c,"border-top-color":"transparent","border-left-color":"transparent","border-right-color":"transparent"}),d.removeClass("top bottom left right"),r(d),d.addClass("bottom")):(d.find(".tipso_arrow").css({"border-top-color":p.settings.background,"border-bottom-color":"transparent","border-left-color":"transparent","border-right-color":"transparent"}),d.removeClass("top bottom left right"),r(d),d.addClass("top")),n+p.settings.width>f.outerWidth()&&(a=f.outerWidth()-(n+p.settings.width),d.find(".tipso_arrow").css({marginLeft:-a-p.settings.arrowWidth,marginTop:""}),n+=a),n<f.scrollLeft()&&(d.find(".tipso_arrow").css({marginLeft:n-p.settings.arrowWidth}),n=0)),n+p.settings.width>f.outerWidth()&&("left"===p.settings.position||"right"===p.settings.position||"top-right"===p.settings.position||"top-left"===p.settings.position||"bottom-right"===p.settings.position||"bottom-right"===p.settings.position)&&(n=l.offset().left+l.outerWidth()/2-e(d).width/2,d.find(".tipso_arrow").css({marginLeft:-p.settings.arrowWidth,marginTop:""}),i=l.offset().top-e(d).height-g,i<f.scrollTop()?(i=l.offset().top+l.outerHeight()+g,d.find(".tipso_arrow").css({"border-bottom-color":c,"border-top-color":"transparent","border-left-color":"transparent","border-right-color":"transparent"}),r(d),d.removeClass("top bottom left right"),d.addClass("bottom")):(d.find(".tipso_arrow").css({"border-top-color":p.settings.background,"border-bottom-color":"transparent","border-left-color":"transparent","border-right-color":"transparent"}),r(d),d.removeClass("top bottom left right"),d.addClass("top")),n+p.settings.width>f.outerWidth()&&(a=f.outerWidth()-(n+p.settings.width),d.find(".tipso_arrow").css({marginLeft:-a-p.settings.arrowWidth,marginTop:""}),n+=a),n<f.scrollLeft()&&(d.find(".tipso_arrow").css({marginLeft:n-p.settings.arrowWidth}),n=0)),d.css({left:n+p.settings.offsetX,top:i+p.settings.offsetY}),i<f.scrollTop()&&("right"===p.settings.position||"left"===p.settings.position)&&(l.tipso("update","position","bottom"),s(p)),i+e(d).height>f.scrollTop()+f.outerHeight()&&("right"===p.settings.position||"left"===p.settings.position)&&(l.tipso("update","position","top"),s(p))}var i="tipso",n={speed:400,background:"#55b555",titleBackground:"#333333",color:"#ffffff",titleColor:"#ffffff",titleContent:"",showArrow:!0,position:"top",width:200,maxWidth:"",delay:200,hideDelay:0,animationIn:"",animationOut:"",offsetX:0,offsetY:0,arrowWidth:8,tooltipHover:!1,content:null,ajaxContentUrl:null,ajaxContentBuffer:0,contentElementId:null,useTitle:!1,templateEngineFunc:null,onBeforeShow:null,onShow:null,onHide:null};t.extend(o.prototype,{init:function(){{var t=this,o=this.$element;this.doc}if(o.addClass("tipso_style").removeAttr("title"),t.settings.tooltipHover){var e=null,r=null;o.on("mouseover."+i,function(){clearTimeout(e),clearTimeout(r),r=setTimeout(function(){t.show()},150)}),o.on("mouseout."+i,function(){clearTimeout(e),clearTimeout(r),e=setTimeout(function(){t.hide()},200),t.tooltip().on("mouseover."+i,function(){t.mode="tooltipHover"}).on("mouseout."+i,function(){t.mode="show",clearTimeout(e),e=setTimeout(function(){t.hide()},200)})})}else o.on("mouseover."+i,function(){t.show()}),o.on("mouseout."+i,function(){t.hide()});t.settings.ajaxContentUrl&&(t.ajaxContent=null)},tooltip:function(){return this.tipso_bubble||(this.tipso_bubble=t('<div class="tipso_bubble"><div class="tipso_title"></div><div class="tipso_content"></div><div class="tipso_arrow"></div></div>')),this.tipso_bubble},show:function(){var o=this.tooltip(),e=this,r=this.win;e.settings.showArrow===!1?o.find(".tipso_arrow").hide():o.find(".tipso_arrow").show(),"hide"===e.mode&&(t.isFunction(e.settings.onBeforeShow)&&e.settings.onBeforeShow(e.$element,e.element,e),e.settings.size&&o.addClass(e.settings.size),e.settings.width?o.css({background:e.settings.background,color:e.settings.color,width:e.settings.width}).hide():e.settings.maxWidth?o.css({background:e.settings.background,color:e.settings.color,maxWidth:e.settings.maxWidth}).hide():o.css({background:e.settings.background,color:e.settings.color,width:200}).hide(),o.find(".tipso_title").css({background:e.settings.titleBackground,color:e.settings.titleColor}),o.find(".tipso_content").html(e.content()),o.find(".tipso_title").html(e.titleContent()),s(e),r.on("resize."+i,function(){e.settings.position=e.settings.preferedPosition,s(e)}),window.clearTimeout(e.timeout),e.timeout=null,e.timeout=window.setTimeout(function(){e.ieFade||""===e.settings.animationIn||""===e.settings.animationOut?o.appendTo("body").stop(!0,!0).fadeIn(e.settings.speed,function(){e.mode="show",t.isFunction(e.settings.onShow)&&e.settings.onShow(e.$element,e.element,e)}):o.remove().appendTo("body").stop(!0,!0).removeClass("animated "+e.settings.animationOut).addClass("noAnimation").removeClass("noAnimation").addClass("animated "+e.settings.animationIn).fadeIn(e.settings.speed,function(){t(this).one("webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend",function(){t(this).removeClass("animated "+e.settings.animationIn)}),e.mode="show",t.isFunction(e.settings.onShow)&&e.settings.onShow(e.$element,e.element,e),r.off("resize."+i,null,"tipsoResizeHandler")})},e.settings.delay))},hide:function(o){var e=this,r=this.win,s=this.tooltip(),n=e.settings.hideDelay;o&&(n=0,e.mode="show"),window.clearTimeout(e.timeout),e.timeout=null,e.timeout=window.setTimeout(function(){"tooltipHover"!==e.mode&&(e.ieFade||""===e.settings.animationIn||""===e.settings.animationOut?s.stop(!0,!0).fadeOut(e.settings.speed,function(){t(this).remove(),t.isFunction(e.settings.onHide)&&"show"===e.mode&&e.settings.onHide(e.$element,e.element,e),e.mode="hide",r.off("resize."+i,null,"tipsoResizeHandler")}):s.stop(!0,!0).removeClass("animated "+e.settings.animationIn).addClass("noAnimation").removeClass("noAnimation").addClass("animated "+e.settings.animationOut).one("webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend",function(){t(this).removeClass("animated "+e.settings.animationOut).remove(),t.isFunction(e.settings.onHide)&&"show"===e.mode&&e.settings.onHide(e.$element,e.element,e),e.mode="hide",r.off("resize."+i,null,"tipsoResizeHandler")}))},n)},close:function(){this.hide(!0)},destroy:function(){{var t=this.$element,o=this.win;this.doc}t.off("."+i),o.off("resize."+i,null,"tipsoResizeHandler"),t.removeData(i),t.removeClass("tipso_style").attr("title",this._title)},titleContent:function(){var t,o=this.$element,e=this;return t=e.settings.titleContent?e.settings.titleContent:o.data("tipso-title")},content:function(){var o,e=this.$element,r=this,s=this._title;return r.settings.ajaxContentUrl?r._ajaxContent?o=r._ajaxContent:(r._ajaxContent=o=t.ajax({type:"GET",url:r.settings.ajaxContentUrl,async:!1}).responseText,r.settings.ajaxContentBuffer>0?setTimeout(function(){r._ajaxContent=null},r.settings.ajaxContentBuffer):r._ajaxContent=null):r.settings.contentElementId?o=t("#"+r.settings.contentElementId).text():r.settings.content?o=r.settings.content:r.settings.useTitle===!0?o=s:"string"==typeof e.data("tipso")&&(o=e.data("tipso")),null!==r.settings.templateEngineFunc&&(o=r.settings.templateEngineFunc(o)),o},update:function(t,o){var e=this;return o?void(e.settings[t]=o):e.settings[t]}});var a=function(){var t=document.createElement("p").style,o=["ms","O","Moz","Webkit"];if(""===t.transition)return!0;for(;o.length;)if(o.pop()+"Transition"in t)return!0;return!1}();t[i]=t.fn[i]=function(e){var r=arguments;if(void 0===e||"object"==typeof e)return this instanceof t||t.extend(n,e),this.each(function(){t.data(this,"plugin_"+i)||t.data(this,"plugin_"+i,new o(this,e))});if("string"==typeof e&&"_"!==e[0]&&"init"!==e){var s;return this.each(function(){var n=t.data(this,"plugin_"+i);n||(n=t.data(this,"plugin_"+i,new o(this,e))),n instanceof o&&"function"==typeof n[e]&&(s=n[e].apply(n,Array.prototype.slice.call(r,1))),"destroy"===e&&t.data(this,"plugin_"+i,null)}),void 0!==s?s:this}}});;
/*!
 * Xbox Switcher
 * Version: 1.0
 * Author: Max López
 */

;(function ( $, window, document, undefined ) {

  function Plugin( element, options ) {
    var _ = this;
    _.el = element;
    _.$el = $(element);
    _.defaults = {
      on_text: '',
			off_text: '',
			on_value: 'on',
			off_value: 'off',
			readonly: false,
    };
    _.metadata = _.$el.data( 'switcher' ) || {};
    _.options = $.extend( {}, _.defaults, options, _.metadata );
    _.$el.data( 'switcher', _.options );
    _.init();
  }

  Plugin.prototype = {
    init : function () {
      var _ = this;
      if( _.$el.parent().hasClass( 'xbox-sw-wrap' ) ) {
				return;
			}
      if( _.$el.attr('type') == 'hidden' || _.$el.attr('type') == 'checkbox' ){
				_.build();
			}
    },

    build: function () {
      var _ = this;
      var $input = _.$el;
			var has_icons = false;
			var html_toggle_on = '<div class="xbox-sw-toggle xbox-sw-toggle-on">';
			var html_toggle_off = '<div class="xbox-sw-toggle xbox-sw-toggle-off">';
			if( _.options.on_text !== '' && _.options.off_text !== '' ){
				html_toggle_on = html_toggle_on + _.options.on_text + '</div>';
				html_toggle_off = html_toggle_off + _.options.off_text + '</div>';
			} else {
				has_icons = true;
				html_toggle_on = html_toggle_on + '<i class="icon-sw-on"></i></div>';
				html_toggle_off = html_toggle_off + '<i class="icon-sw-off"></i></div>';
			}

			var is_disabled = $input.is(':disabled') ? true: false;

			var status_classes = '';
			status_classes += _.is_on() ? 'xbox-sw-on' : 'xbox-sw-off';
			status_classes += is_disabled ? ' xbox-sw-disabled' : '';
			status_classes += has_icons ? ' xbox-sw-has-icons' : '';

			var switcher_body =
					'<div class="xbox-sw-inner ' + status_classes + '">' +
						'<div class="xbox-sw-blob"></div>' +
						html_toggle_on + html_toggle_off +
					'</div>';

			$input.wrap('<div class="xbox-sw-wrap"></div>');
			$input.parent().append( switcher_body );
			$input.parent().find( '.xbox-sw-inner' ).addClass( 'xbox-sw-type-'+ $input.attr('type') );
    },

    is_on: function () {
			if( this.$el.next( '.xbox-sw-inner' ).hasClass( 'xbox-sw-on' ) ){
				return true;
			}
			if( this.$el.attr( 'type' ) == 'checkbox'){
				return this.$el.is( ':checked' );
			} else {
				if( this.$el.val() == this.options.on_value ){
					return true;
				}
			}
			return false;
    },

    set_on: function () {
      var $input = $(this);
			if( ! $input.parent().hasClass( 'xbox-sw-wrap' ) ) {
				return;
			}
			var options = $input.data( 'switcher' );

			if( $input.attr( 'type' ) == 'checkbox' ){
				$input.prop( 'checked', true ).attr( 'checked', 'checked' );
			} else {
				$input.val( options.on_value );
			}

			$input.parent().find( '.xbox-sw-inner' ).removeClass( 'xbox-sw-off' ).addClass( 'xbox-sw-on' );

			//Eventos
			$input.trigger( 'changeOn' );
			$input.trigger( 'statusChange' );

			return true;
    },

    set_off: function () {
      var $input = $(this);
			if( ! $input.parent().hasClass( 'xbox-sw-wrap' ) ) {
				return;
			}
			var options = $input.data( 'switcher' );

			if( $input.attr( 'type' ) == 'checkbox' ){
				$input.prop( 'checked', false ).removeAttr( 'checked' );
			} else {
				$input.val( options.off_value );
			}

			$input.parent().find( '.xbox-sw-inner' ).removeClass( 'xbox-sw-on' ).addClass( 'xbox-sw-off' );

			//Eventos
			$input.trigger( 'changeOff' );
			$input.trigger( 'statusChange' );

			return true;
    },

    destroy: function () {
      $(this).each(function() {
				$(this).parents( '.xbox-sw-wrap' ).children().not( 'input' ).remove();
				$(this).unwrap();
      });
			return true;
    }
  };

  //Eventos
  $(document).ready(function() {
		$(document).on('click tap', '.xbox-sw-inner:not(.xbox-sw-disabled)', function(e) {
			var $input = $(this).parent().find('input');
			if( $(this).hasClass( 'xbox-sw-on' ) ) {
				$input.xboxSwitcher( 'set_off' );
			} else {
				$input.xboxSwitcher( 'set_on' );
			}
		});

		$(document).on('change', '.xbox-sw-wrap input', function(e) {
			if( $(this).next('.xbox-sw-inner').hasClass( 'xbox-sw-on' ) ) {
				$(this).xboxSwitcher( 'set_off' );
			} else {
				$(this).xboxSwitcher( 'set_on' );
			}
		});
	});

  $.fn.xboxSwitcher = function ( options ) {
    if ( Plugin.prototype[options] && options != 'init' && options != 'build' && options != 'is_on' ) {
      return Plugin.prototype[options].apply( this, Array.prototype.slice.call( arguments, 1) );
    } else if ( typeof options === 'object' || ! options ) {
      return this.each(function () {
        new Plugin( this, options );
      });
    } else {
      //nothing
    }
  };

})( jQuery, window, document );
;
/*!
 * Xbox Tabs
 * Version: 1.0
 * Author: Max López
 */

;(function (document, window, $){
    "use strict";

    function Plugin (el, options){
      this.el  = el;
      this.$el = $(el);

      this.options = $.extend({}, this._defaultOptions, options, this.$el.data());

      this.$nav    = this.$el.find('.xbox-tab-nav').first();
      this.$links  = this.$nav.find('a');
      this.$body = this.$el.find('.xbox-tab-body').first();
      this.$panels = this.$body.find('> .xbox-tab-content');

      this._checkType();

      if (this.options.type !== 'tabs'){
          this._setupAccordion();
      }

      this._setup();
      this._events();
      this._initialise();
    }

    Plugin.prototype._defaultOptions = {
      type        : 'responsive',
      breakpoint  : 768,
      speed       : 500,
      initial     : 0,
      collapsible : false,
      keepOpen    : false
    };

    Plugin.prototype._setup = function ( $item_active ){
      if( ! $item_active ){
        $item_active = this.$links.eq(0).parent();
        if( $item_active.hasClass('xbox-item-has-childs') ){
          $item_active = this.$links.eq(1).parent();
        }
      }
      var _url = $item_active.data('tab'); //store the first links url
      this.$panels.hide(); //hide all tab panels
      this.$body.find('> .xbox-tab-content[data-tab="'+_url+'"]').show();
      this._updateActive(_url);
    };

    Plugin.prototype._setupAccordion = function (){
      var self = this;

      this.$panels.each(function(i, el){ //for each tab panel
        //var _link = self.$links.eq(i).attr('href'), //store the links href
        //var _link = self.$nav.find('li').fil.data('tab'), //store the links href
        var _link = $(el).data('tab');
        var $item = self.$nav.find('li[data-tab="'+_link+'"]');
        var _text = $item.find('a').html(); //store the links text/title
        var _class = '';
        if( $item.length ){
           _class = $item.attr('class').replace('xbox-item', '');
          _class = _class.replace('active', '');
        }
        var data = $item.data('item') ? 'item="'+$item.data('item')+'"' : 'parent="'+$item.data('parent')+'"';

        self.$panels.eq(i).before('<h3 class="xbox-accordion-title '+_class+'" data-'+ data+'><a href="' + _link + '"><span>' + _text + '</span></a></h3>'); //add the accordion title
      });

      this.$links = this.$links.add( this.$panels.parent().find('> .xbox-accordion-title > a') ); //update the links variable after new items have been created
    };

    Plugin.prototype._events = function (){
      var self = this;

      this.$links.on('click', function (event) { //on link click
        event.preventDefault(); //prevent default action
        var link = this;

        if( $(link).parent().hasClass('xbox-item-has-childs') ){
          link = $(link).parent().next('.xbox-item-child').find('a');
          self.openCloseChildItems(this);
          self.openCloseChildItems(link);
        } else {
          self.openCloseChildItems(this);
        }
        self._change(link);
      });

      if (this.options.type === 'responsive'){
        $(window).resize(function(){
          self._checkType(); //check elements type i.e. tabs/accordion

          //Update active tab
          var $item_active = self.$nav.find('.active');
          self._removeClasses();
          self._setup( $item_active );
        });
      }

      this.$links.parent().on('click', '.xbox-toggle-icon', function(event) {
        event.preventDefault();
        var $item = $(this).parent();
        var $toggle = $(this);
        var data_item = $item.data('item');
        if( $item.hasClass('xbox-open') ){
          $item.removeClass('xbox-open');
          $toggle.find('i').removeClass('xbox-icon-chevron-up').addClass('xbox-icon-chevron-down');
          $item.siblings('.xbox-item-child').each(function(index, el) {
            if( $(el).data('parent') == data_item ){
              $(el).slideUp();
            }
          });
        } else {
          $item.addClass('xbox-open');
          $item.find('a').trigger('click');
          $toggle.find('i').removeClass('xbox-icon-chevron-down').addClass('xbox-icon-chevron-up');
          $item.siblings('.xbox-item-child').each(function(index, el) {
            if( $(el).data('parent') == data_item ){
              $(el).slideDown();
            }
          });
        }
      });
    };

    Plugin.prototype.openCloseChildItems = function (trigger){
      var $item = $(trigger).parent();
      var data_item = $item.data('item');
      if( $item.hasClass('xbox-accordion-title') ){
        return;
      }
      if( data_item ){
        var $toggle = $item.find('.xbox-toggle-icon');
        $item.siblings('.xbox-item-parent').removeClass('xbox-open').find('.xbox-toggle-icon i').removeClass('xbox-icon-chevron-up').addClass('xbox-icon-chevron-down');
        var has_childs = false;
        $item.siblings('.xbox-item-child').each(function(index, el) {
          if( $(el).data('parent') == data_item ){
            $(el).slideDown();
            has_childs = true;
            $toggle.find('i').removeClass('xbox-icon-chevron-down').addClass('xbox-icon-chevron-up');
          } else {
            $(el).slideUp();
            $toggle.find('i').removeClass('xbox-icon-chevron-up').addClass('xbox-icon-chevron-down');
          }
        });
        if( has_childs ){
          $item.addClass('xbox-open');
        }
      }
    };

    Plugin.prototype._change = function (trigger){
      var _trigger = $(trigger),
          _newPanel = _trigger.attr('href'); //store the items href

      if (!_trigger.parent().hasClass('active')) { //if the link is not already active
        if(this.$el.hasClass('is-tab')){
          this._tabs(_newPanel);
        } else {
          this._accordion(_newPanel); //run change function depending on type
        }
        if( $.isFunction(this.options.change) ){
          this.options.change.call(this.$el, $(_newPanel));
        }
        $(document).trigger('xbox-tabs.change', [this.$el, $(_newPanel)]);

      } else if (this.$el.hasClass('is-accordion') && _trigger.parent().hasClass('active')) {
        if (this.options.collapsible === true) {
          this._accordionCollapse(_newPanel);
        }
      }
    };

    Plugin.prototype._initialise = function (){
      this.$el.addClass('xbox-tabs xbox-tabs-initialized');
      if( $.isFunction(this.options.initialised) ){
        this.options.initialised.call(this.$el);
      }
      $(document).trigger('xbox-tabs.initialised', [this.$el]);

      //Fix first tab item with childs
      this.$links.eq(0).parent().find('.xbox-toggle-icon').trigger('click');
      this.$links.eq(0).parent().find('.xbox-toggle-icon').trigger('click');
      this.$links.eq(0).trigger('click');
    };

    Plugin.prototype._accordion = function (panel){
      if (!this.options.keepOpen) {
        this.$panels.stop(true, true).slideUp(this.options.speed);

        this._removeClasses();
      }

      this.$body.find('>.xbox-tab-content[data-tab="'+panel+'"]').stop(true, true).slideDown(this.options.speed);

      this._updateActive(panel);
    };

    Plugin.prototype._accordionCollapse = function (panel){
      this.$nav.find('a[href="' + panel + '"]').parent().removeClass('active');
      this.$body.find('>.xbox-accordion-title > a[href="' + panel + '"]').parent().removeClass('active');

      this.$body.find('>.xbox-tab-content[data-tab="'+panel+'"]').stop(true, true).slideUp(this.options.speed);
    };

    Plugin.prototype._tabs = function (panel){
      this.$panels.hide(); //hide current panel

      this._removeClasses();

      this._updateActive(panel);

      this.$body.find('>.xbox-tab-content[data-tab="'+panel+'"]').show();
    };

    Plugin.prototype._removeClasses = function (){
      this.$links.parent().removeClass('active');
    };

    Plugin.prototype._updateActive = function (panel){
      this.$nav.find('a[href="' + panel + '"]').parent().addClass('active');
      this.$body.find('>.xbox-accordion-title > a[href="' + panel + '"]').parent().addClass('active');
    };

    Plugin.prototype._checkType = function (){
      if (this.options.type === 'responsive'){
        if ($(window).outerWidth() > this.options.breakpoint) { //if the window is desktop/tablet
          this.$el.removeClass('is-accordion').addClass('is-tab'); //add is-tab class
        } else { //window is mobile size
          this.$el.removeClass('is-tab').addClass('is-accordion'); //add accordion class
        }
      } else if (this.options.type === 'tabs' || this.options.type === 'accordion'){
        (this.options.type === 'tabs') ? this.$el.addClass('is-tab') : this.$el.addClass('is-accordion');
      }
    };

    Plugin.prototype.open = function (index){
      console.log('Plugin.prototype.open');
      var $trigger = this.$nav.find('li').eq(index).children('a');
      if ($trigger.length){
        this._change($trigger);
      }
    };



    $.fn.xboxTabs = function (options){
      var args = Array.prototype.slice.call(arguments, 1);

      return this.each(function (){
        var _this = $(this),
            _data = _this.data('xbox-tabs');

        if (!_data){
          _this.data('xbox-tabs', (_data = new Plugin(this, options)));
        }

        if (typeof options === "string" ){
          options = options.replace(/^_/, "");

          if (_data[options]){
            _data[options].apply(_data, args);
          }
        }
      });
    };

}(document, window, jQuery));;
/*!
 * Xbox Confirm
 * Version: 1.0
 * Author: Max López
 */

;(function ( $, window, document, undefined ) {

  function Plugin( options ) {
    var _ = this;
    _.el = '';
    _.$el = undefined;
    _.$overlay = undefined;
    _.visible = false;
    _.defaults = {
      wrap_class: '',
      title: '',
      content: '',
      hide_cancel: false,
      hide_confirm: false,
      hide_close: false,
      cancel_text: '',
      confirm_text: '',
      cancel_class: '',
      confirm_class: 'xbox-btn-blue',
      cancel_bg: '',
      confirm_bg: '',
      cancel_color: '',
      confirm_color: '',
      close_delay: -1,
      close_overlay: true,
      onOpen : null,
      onClose : null,
      onConfirm : null,
      onCancel : null,
    };
    _.options = $.extend( {}, _.defaults, options);

    _.init();

    $(window).on("resize", function () {
      if( _.visible ){
        _.center(true);
      }
    });
  }

  Plugin.prototype = {
    init : function () {
      var _ = this;
      _.build();
      _.ajax_content();
      _.open();
      _.events();
    },

    build: function(){
      var _ = this;
      var header = _.options.title === '' ? '' : '<div class="xbox-confirm-header"><h3>' + _.options.title + '</h3></div>';
      var cancel_text = _.options.cancel_text || 'Cancel';
      var confirm_text = _.options.confirm_text || 'Accept';
      var confirm_btn = _.options.hide_confirm ? '' : '<button class="xbox-confirm-btn xbox-btn" type="button"><i class="xbox-icon xbox-icon-check"></i>' + confirm_text +'</button>';
      var cancel_btn = _.options.hide_cancel ? '' : '<button class="xbox-cancel-btn xbox-btn" type="button"><i class="xbox-icon xbox-icon-close"></i>' + cancel_text +'</button>';
      var close_btn = '<span class="xbox-confirm-close-btn xbox-icon xbox-icon-times"></span>';
      var content = typeof _.options.content == 'object' ? '' : _.options.content;

      _.el =
        '<div class="xbox xbox-confirm ' + _.options.wrap_class +' ">' +
          '<div class="xbox-confirm-inner">' +
            close_btn + header +
            '<div class="xbox-confirm-content">' + content + '</div>' +
            '<div class="xbox-confirm-footer">' +
              cancel_btn + confirm_btn +
            '</div>' +
          '</div>' +
        '</div>';

      $('body').append(_.el);
      $('body').append('<div class="xbox-confirm-overlay"></div>');
      _.$el = $('body').find('.xbox-confirm');
      _.$overlay = $('body').find('.xbox-confirm-overlay');

      //Customization
      _.$el.find('.xbox-cancel-btn').addClass(_.options.cancel_class);
      _.$el.find('.xbox-confirm-btn').addClass(_.options.confirm_class);
      var cancel_css = {};
      var confirm_css = {};

      if( _.options.hide_close ){
        _.$el.find('.xbox-confirm-close-btn').hide();
      }
      if( _.options.cancel_bg ){
        cancel_css.background = _.options.cancel_bg;
      }
      if( _.options.cancel_color ){
        cancel_css.color = _.options.cancel_color;
      }
      _.$el.find('.xbox-cancel-btn').css(cancel_css);

      if( _.options.confirm_bg ){
        confirm_css.background = _.options.confirm_bg;
      }
      if( _.options.confirm_color ){
        confirm_css.color = _.options.confirm_color;
      }
      _.$el.find('.xbox-confirm-btn').css(confirm_css);
    },

    ajax_content: function(){
      var _ = this;
      if( typeof _.options.content != 'object' ){
        return;
      }
      $.ajax({
        type: 'post',
        dataType: _.options.content.dataType,
        url: _.options.content.url,
        data: _.options.content.data,
        beforeSend: function(){
          _.$el.find('.xbox-confirm-content').html("<i class='xbox-icon xbox-icon-spinner xbox-icon-spin xbox-confirm-loader'></i>");
        },
        success: function( response ) {
          if( typeof response != 'object' && _.options.content.dataType == 'html' ){
            _.$el.find('.xbox-confirm-content').append(response);
            setTimeout(function(){ _.center(true); }, 800);
          }
          if ( $.isFunction( _.options.content.onSuccess ) ) {
            _.options.content.onSuccess.call(this, response);
          }
        },
        error: function( jqXHR, textStatus, errorThrown ){
          c('#### AJAX ERROR ####');
          c('jqXHR');c(jqXHR);c('errorThrown');c(errorThrown);
        },
        complete: function( jqXHR, textStatus ){
          setTimeout(function(){ _.center(true); }, 1200);
          _.$el.find('.xbox-confirm-content > .xbox-confirm-loader').remove();
        }
      });
    },

    open : function(){
      var _ = this;
      _.$overlay.fadeIn(400);
      _.$el.addClass('xbox-confirm-open');
      _.visible = true;
      _.center();
      if ( $.isFunction( _.options.onOpen ) ) {
        _.options.onOpen.call(this);
      }
    },

    events : function(){
      var _ = this;
      if( _.options.close_overlay ){
        _.$overlay.on('click', function(event) {
          _.close(event, false);
          return false;
        });
      }
      _.$el.find('.xbox-confirm-close-btn, .xbox-cancel-btn, .xbox-confirm-btn').on('click', function(event) {
        if( $(this).hasClass('xbox-confirm-btn') ){
          _.close(event, true);
        } else {
          _.close(event, false);
        }
        return false;
      });
      if( _.options.close_delay > -1 ){
        setTimeout( function(){ _.close(event, false); }, _.options.close_delay );
      }
    },

    close : function(event, confirm){
      var _ = this;
      _.$el.addClass('xbox-confirm-close');
      _.$el.one("webkitAnimationEnd oanimationend msAnimationEnd animationend", function(event) {
        if ( $.isFunction( _.options.onCancel ) && confirm === false ) {
          _.options.onCancel.call(this);
        }
        if ( $.isFunction( _.options.onConfirm ) && confirm ) {
          _.options.onConfirm.call(this);
        }
        if ( $.isFunction( _.options.onClose ) ) {
          _.options.onClose.call(this);
        }
        _.destroy();
      });
    },

    destroy : function(){
      var _ = this;
      _.$el.remove();
      _.$overlay.fadeOut(500).remove();
      _.visible = false;
    },

    center : function( animate ){
      animate = animate || false;
      var _ = this;
      var left = ( $(window).width() - _.$el.width() ) / 2;
      var top = ( $(window).height() - _.$el.height() ) / 2;
      var margin_top = 10;
      if( animate ){
        _.$el.stop().animate({
          'top' : (top - margin_top) + 'px',
          'margin-left' : -1*( _.$el.width() / 2 ),
        }, 300);
      } else {
        _.$el.css({
        'top' : (top - margin_top) + 'px',
        'margin-left' : -1*( _.$el.width() / 2 ),
        });
      }
    }
  };

  //Debug
  function c(msg){
    console.log(msg);
  }

  $.xboxConfirm = function ( options ) {
    new Plugin( options );
  };

})( jQuery, window, document );;
/*!
 * Xbox Image Selector
 * Version: 1.0
 * Author: Max López
 */

;(function ( $, window, document, undefined ) {

  function Plugin( element, options ) {
    var _ = this;
    _.el = element;
    _.$el = $(element);
    _.defaults = {
      width : '100px',
      height : 'auto',
      active_class : '',
      active_color : 'blue'
    };
    _.metadata = _.$el.data( 'image-selector' ) || {};
    _.options = $.extend( {}, _.defaults, options, _.metadata );
    _.$el.data('image-selector', _.options);
    _.init();
  }

  Plugin.prototype = {
    init : function () {
      var _ = this;
      if( _.$el.hasClass('xbox-image-selector') ){
        return;
      }
      _.build();
      return _;
    },

    build: function () {
      var _ = this;
      _.$el.addClass('xbox-image-selector');
      _.$el.find('input').each(function(index, item) {
        var $input = $(item);
        var src = $input.data('image');
        if( is_empty( src ) ){
          return;
        }
        if( ! $input.parent('label.no-image').length ){
          $input.hide();
          $input.after('<img src="'+ src +'">');
          $input.next('img').css({
            'max-width': _.options.width,
            'height': _.options.height,
          });
        }

        if( $input.prop('checked') ){
          $input.parent('label').addClass('checked');
          if( is_empty( _.options.active_class ) ){
            $input.next('img').css('border', '1px solid ' + _.options.active_color );
          } else {
            $input.next('img').addClass(_.options.active_class);
          }
        }
      });
    },

    active : function(){
      var $input = $(this);
      var $el = $input.closest('.xbox-image-selector');
      var options = $el.data('image-selector');

      if( options.like_checkbox ){
        if( $input.parent('label').hasClass('checked') ){
          $input.removeAttr( 'checked' ).prop('checked', false).parent('label').removeClass('checked');
          if( $input.next('img') !== undefined ){
            if( is_empty( options.active_class ) ){
              $input.next('img').css('border', '1px transparent #FFF');
            } else {
              $input.next('img').removeClass( options.active_class );
            }
          }
        } else {
          $input.attr( 'checked', 'checked' ).prop('checked', true).parent('label').addClass('checked');
          if( $input.next('img') !== undefined ){
            if( is_empty( options.active_class ) ){
              $input.next('img').css('border', '1px solid ' + options.active_color );
            } else {
              $input.next('img').addClass( options.active_class );
            }
          }
        }
      } else {
        //Disable all
        $el.find('input').removeAttr( 'checked' ).prop('checked', false);
        $el.find('label').removeClass('checked');
        //Active current
        $input.attr( 'checked', 'checked' ).prop('checked', true).parent('label').addClass('checked');

        if( $input.next('img') !== undefined ){
          if( is_empty( options.active_class ) ){
            $el.find('img').css('border', '1px transparent #FFF');
            $input.next('img').css('border', '1px solid ' + options.active_color );
          } else {
            $el.find('img').removeClass( options.active_class );
            $input.next('img').addClass( options.active_class );
          }
        }
      }
      $input.trigger( 'imgSelectorChanged' );
      return false;
    },

    destroy: function () {
      $(this).each(function() {
        $(this).removeClass('xbox-image-selector').find('img').remove();
      });
      return true;
    },

    disable_all: function () {
      var $input = $(this);
      var $el = $input.closest('.xbox-image-selector');
      var options = $el.data('image-selector');
      if( options.like_checkbox ){
        $el.find('input').removeAttr( 'checked' ).prop('checked', false);
        $el.find('label').removeClass('checked');
        if( $input.next('img') !== undefined ){
          if( is_empty( options.active_class ) ){
            $el.find('img').css('border', '1px transparent #FFF');
          } else {
            $el.find('img').removeClass( options.active_class );
          }
        }
      }
      return true;
    }

  };

  function is_empty( value ){
    return ( value === undefined || value === false || $.trim(value).length === 0 );
  }

  //Debug
  function c(msg){
    console.log(msg);
  }

  $(document).ready(function($) {
    $(document).on('click.img_selector', '.xbox-image-selector input', function(event) {
      $(this).xboxImageSelector('active');
    });
    $(document).on('img_selector_disable_all', '.xbox-image-selector input', function(event) {
      $(this).xboxImageSelector('disable_all');
    });
  });

  $.fn.xboxImageSelector = function ( options ) {
    if ( Plugin.prototype[options] && options != 'init' && options != 'build' && options != 'is_empty' ) {
      return Plugin.prototype[options].apply( this, Array.prototype.slice.call( arguments, 1) );
    } else if ( typeof options === 'object' || ! options ) {
      return this.each(function () {
        new Plugin( this, options );
      });
    } else {
      //nothing
    }
  };

})( jQuery, window, document );